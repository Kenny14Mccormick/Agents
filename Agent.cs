//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Попрыженок
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Agent
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Agent()
        {
            this.AgentPriorityHistory = new HashSet<AgentPriorityHistory>();
            this.ProductSale = new HashSet<ProductSale>();
            this.Shop = new HashSet<Shop>();
        }
    
        public int ID { get; set; }
        public string Title { get; set; }
        public int AgentTypeID { get; set; }
        public string Address { get; set; }
        public string INN { get; set; }
        public string KPP { get; set; }
        public string DirectorName { get; set; }
        public string Phone { get; set; }
        public string Email { get; set; }
        public string Logo { get; set; }
        public int Priority { get; set; }
    
        public int Sales
        {
            get
            {
                return ProductSale.Count;
            }
        }

        public int Discount
        {
            get
            {
                List<ProductSale> temp = ProductSale.ToList();

                decimal summ = 0;

                for (int i = 0; i < temp.Count; i++)
                {
                    summ += temp[i].Product.MinCostForAgent * temp[i].ProductCount;
                }

                if (summ >= 0 && summ < 10000)
                {
                    return 0;

                }

                if (summ >= 10000 && summ < 50000)
                {
                    return 5;
                }

                if (summ >= 50000 && summ < 150000)
                {
                    return 10;
                }

                if (summ >= 150000 && summ < 500000)
                {
                    return 20;
                }

                if (summ >= 500000)
                {
                    return 25;
                }

                return 0;
            }
        }

        public string DiscountColor
        {
            get
            {
                if (Discount == 5)
                {
                    return "Green";
                }
                else return "Black";
            }
        }
        public string NewLogo
        {
            get
            {
                if (Logo != "")
                {
                    return Logo;
                }
                else return "/agents/picture.png";
            }
        }
        public virtual AgentType AgentType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AgentPriorityHistory> AgentPriorityHistory { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProductSale> ProductSale { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Shop> Shop { get; set; }
    }
}
